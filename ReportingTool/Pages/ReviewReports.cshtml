@page "{id:int?}"
@model Reportingtool.Pages.ReviewReportsModel

@{
    ViewData["Title"] = Model.Current_User + " - Review Reports";
}


<hr class="my-5">

<!--Intro-->
<section>
    <div class="container-fluid border-bottom">

        <!--Excerpt-->
        <!-- Main Header -->
        <h2 class="py-2 text-center">In Progress Reports</h2>
        <p class="mb-5 lead text-center grey-text">Analyse and Diagnose Machinery Issues</p>

    </div>
</section>
<!--/Intro-->

<div class="container-fluid grey lighten-4">
    <!--Section: Report Form-->
    <div class="container">
        <div class="row">

            <!-- RHS Side Bar -->
            <div class="col-md-4 order-md-2" id="RHS">
                <!-- Machine Notes -->
                <h4 class="d-flex justify-content-between align-items-center mt-5 mx-3">
                    <span>Machine Notes</span>
                </h4>
                <div class="accordion" id="machineNotes">
                    @for (int idx = 0; idx < Model.Current_Displayed_Report.Machine_Train_Entry.Machine_Train_Notes.Count; ++idx)
                    {
                        @if (Model.Current_Displayed_Report.Machine_Train_Entry.Machine_Train_Notes[idx].MachineTrainNoteShowOnReport)
                        {
                            <div class="card">
                                <div class="card-header" id="heading@(idx)">
                                    <h2 class="mb-0">
                                        <button class="btn btn-link collapsed preview-note" type="button" data-toggle="collapse" data-target="#collapse@(idx)" aria-expanded="false" aria-controls="collapse@(idx)">
                                            @Model.Current_Displayed_Report.Machine_Train_Entry.Machine_Train_Notes[idx].MachineTrainNote
                                        </button>
                                    </h2>
                                </div>
                                <div id="collapse@(idx)" class="collapse" aria-labelledby="heading@(idx)" data-parent="#machineNotes">
                                    <div class="card-body">
                                        @Model.Current_Displayed_Report.Machine_Train_Entry.Machine_Train_Notes[idx].MachineTrainNote
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

                <!--./ Machine Notes-->
                <!-- Queue -->
                <h4 class="d-flex justify-content-between align-items-center mt-5 mx-3">
                    <span>Reports In Progress</span>
                    <span class="badge badge-secondary badge-pill">@Model.VTstReportSummary_InProgress.Count</span>
                </h4>
                <!--card-->
                <div class="card mb-4 wow fadeIn">
                    <!--Card content-->
                    <div class="list-group" id="machinesInProgress" role="tablist">
                        <form method="post" asp-page-handler="loadselectedreport" id="loadselectedreportform">
                            <input id="selectedreportidtoload" type="hidden" asp-for="SelectedReportId">
                        </form>
                        @for (int idx = 0; idx < Model.UnitReference_InProgress.Count; ++idx)
                        {
                            var unit_ref = Model.UnitReference_InProgress[idx];
                            var VTstReportSummary_InProgress_Per_Unit = Model.VTstReportSummary_InProgress.Where(r => r.UnitReference == @unit_ref).ToList();
                            <h5 class="ip-sub-header list-group-item d-flex justify-content-between">
                                <span>Unit @(unit_ref)00</span>
                                <strong>@VTstReportSummary_InProgress_Per_Unit.Count Reports</strong>
                            </h5>

                            foreach (var in_p_report in VTstReportSummary_InProgress_Per_Unit)
                            {
                                <a class="in-queue-rpt-item list-group-item d-flex justify-content-between lh-condensed @Model.active_status_list[Convert.ToInt32(in_p_report.ReportId == Model.Current_Displayed_Report.ReportId)]" id="@(in_p_report.ReportId)" data-toggle="list" href="#" role="tab">
                                    @{
                                        if (in_p_report.FaultTypeId == null)
                                        {
                                            <div>
                                                <h6 class="my-0">@in_p_report.MachineTrain</h6>
                                                <small>New Fault</small>
                                            </div>
                                            <span></span>
                                        }
                                        else
                                        { <div>
                                                <h6 class="my-0">@in_p_report.MachineTrain</h6>
                                                <small>@in_p_report.PrimaryComponentType & @in_p_report.FaultType</small>
                                            </div>
                                            <small>@in_p_report.Condition - @in_p_report.ConditionMagnitude</small>
                                        }
                                    }
                                </a>
                            }
                        }
                        <div class="ip-sub-header list-group-item d-flex justify-content-between">
                            <button type="submit" class="btn btn-block" data-toggle="modal" data-target="#modalLoadReport">
                                Load selected report
                            </button>
                        </div>
                    </div>
                </div>

                <h4 class="d-flex justify-content-between align-items-center mt-5 mx-3">
                    <span>Add or Edit </span>
                </h4>
                <!--Card-->
                <div class="card">

                    <!--Card content-->
                    <div class="card-body">

                        <!-- Heading -->
                        <p class="grey-text">
                            Raise a new fault, or edit an existing report on a machine train
                        </p>

                        <!-- Search for a machine -->
                        <form method="post" asp-page-handler="AddNewFaultAgainstMachine" id="AddNewFaultAgainstMachineForm">
                            <div class="input-group mb-3 ui-widget w-100">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-search ml-1"></i></span>
                                </div>
                                <input type="text" class="form-control" id="ModifyCustomMachineTrain1" value="@Model.ModifyCustomMachineTrain.MachineTrain1" placeholder="@Model.ModifyCustomMachineTrain.MachineTrain1">
                                <input type="hidden" name="MachineTrainIdAddNewFault" id="ModifyCustomMachineTrainId" class="form-control" value="@Model.ModifyCustomMachineTrain.PkMachineTrainId">
                            </div>
                        </form>
                        <!-- /.Search for a machine -->

                        <div class="list-group  d-flex justify-content-center">
                            <!--- buttons and forms  -->
                            <div class="row d-flex justify-content-center modalWrapper">
                                <div class="modal fade addNewInputs" id="modalAddNewFault" tabindex="-1" role="dialog" aria-labelledby="modalAddNewFault"
                                     aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header text-center">
                                                <h4 class="modal-title w-100 font-weight-bold ml-5 text-default">Raise a new fault</h4>
                                                <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body mx-3">
                                                Are you sure you want to create a new fault?   <br />
                                                A new fault will be added to the queue against   <br />
                                                <strong id="AddNewFaultMachineName">{this machine name}.</strong>
                                            </div>
                                            <div class="modal-footer d-flex justify-content-center">
                                                <button type="button" class="btn btn-danger btnYesClass" id="btnYes" data-dismiss="modal" onclick="$('#AddNewFaultAgainstMachineForm').submit();">Yes</button>
                                                <button type="button" class="btn btn-primary btnNoClass" id="btnNo" data-dismiss="modal">No</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="text-center">
                                    <a href="" class="btn btn-info btn-rounded btn-sm" data-toggle="modal" data-target="#modalAddNewFault">
                                        New fault<i class="fas fa-plus-square ml-1"></i>
                                    </a>
                                </div>
                                <!--- end add form -->


                                <div class="text-center">
                                    <button class="btn btn-primary btn-sm" type="button" data-toggle="collapse" data-target="#collapseEditForm"
                                            aria-expanded="false" aria-controls="collapseEditForm">
                                        Edit existing report <i class="fas fa-edit ml-1"></i>
                                    </button>
                                </div>

                                <div class="treeview-animated w-20 border mx-4 my-4 collapse multi-collapse" id="collapseEditForm">
                                    <h6 class="text-center py-3 blue-grey lighten-5 border-bottom border-light" id="ReportListMachineTrainName">@Model.ModifyCustomMachineTrain.MachineTrain1</h6>
                                    <ul class="treeview-animated-list mb-3" id="CustomMachineReportList"></ul>
                                    <hr class="p-0 m-0" />
                                    <div class="text-center">
                                        <button class="btn btn-outline-blue btn-primary btn-sm" type="button" onclick="AddHistoryReportBackToQueue()">
                                            Add back into queue <i class="fas fa-plus-square ml-1"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Add report back to queue -->
                                <form method="post" asp-page-handler="AddHistoryReportBackToQueue" id="AddHistoryReportBackToQueueForm">
                                    <input type="hidden" name="ReportIdBackToQueue" id="ReportIdBackToQueueId" class="form-control">
                                </form>
                                <!-- Add report back to queue -->



                            </div><!--- end pop up forms -->
                        </div>

                    </div>

                </div>
                <!--/.Card-->
            </div><!--./Queue-->
            <!--Report Body-->


            <div class="col-md-8 order-md-1 py-5">
                <!--add multipart/form-data for submitting files-->

                <form method="post" asp-page-handler="updatereportfault" id="updatereportfaultform" enctype="multipart/form-data">

                    <input type="hidden" asp-for="Fault_To_Update.PkFaultId" value=@Model.Fault_To_Update.PkFaultId>
                    <input type="hidden" asp-for="Report_To_Update.PkReportId" value=@Model.Report_To_Update.PkReportId>

                    @if (Model.Current_Displayed_Report.FaultType != null)
                    {
                        <input type="hidden" asp-for="Fault_To_Update.FkFaultTypeId" value=@Model.Fault_To_Update.FkFaultTypeId>
                        <!--DISPLAY: Fault Attribute card-->
                        <!-- This section to show if a report is being created on an existing fault -->
                        <div class="card mb-4 wow fadeIn">
                            <!--Card content-->
                            <div class="card-body" id="displayFaultAttributes">

                                <h5 class="grey-text font-weight-light">Fault Details</h5>
                                <h2 class="mb-3 breadcrumbs" id="machineTag">@Model.Current_Displayed_Report.MachineTrain</h2>
                                <h5 class="mb-3 breadcrumbs" id="machineDescription">@Model.Current_Displayed_Report.MachineTrainLongName</h5>
                                <hr />


                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Technology</span>
                                    </div>
                                    <span class="infolabel">@Model.Technology_List.FirstOrDefault(t => t.PkTechnologyId == Model.Fault_To_Update.FkTechnologyId).Technology1</span>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text flex-fill">Component</span>
                                    </div>
                                    <span class="infolabel" id="component">@Model.Current_Displayed_Report.PrimaryComponentType</span>
                                    <span class="infolabel" id="componentType">@Model.Current_Displayed_Report.PrimaryComponentSubtype</span>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text flex-fill w-30">Fault Type</span>
                                    </div>
                                    <span class="infolabel" id="existingfaultType" faulttype="@(Model.Fault_To_Update.FkFaultTypeId)">@Model.Current_Displayed_Report.FaultType</span>
                                    <span class="infolabel" id="faultSubtype">@Model.Current_Displayed_Report.FaultSubtype</span>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">Fault Location</span>
                                    </div>
                                    <span class="infolabel"> @Model.Fault_To_Update.FaultLocation</span>
                                </div>

                            </div>
                        </div>
                        <!--./DISPLAY: Fault Attribute card-->
                    }
                    else
                    {
                        <!--FORM: Fault card-->
                        <!-- This section to show if a new fault needs to be created -->
                        <div class="card mb-4 wow fadeIn">
                            <div class="card-header font-weight-bold">Fault Attributes</div>
                            <!--Card content-->
                            <div class="card-body" id="formFaultAttributes">
                                <label class="small text-muted" for="machine">Machine Train</label>
                                <h2 class="mb-3 breadcrumbs" id="machineTag">@Model.Current_Displayed_Report.MachineTrain</h2>
                                <h5 class="mb-3 breadcrumbs" id="machineDescription">@Model.Current_Displayed_Report.MachineTrainLongName</h5>
                                <hr />

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Technology</span>
                                    </div>
                                    <select class="custom-select d-block " asp-for="Fault_To_Update.FkTechnologyId" required>
                                        @foreach (var item in Model.Technology_List)
                                        {
                                            <option value="@(item.PkTechnologyId)">@item.Technology1</option>
                                        }
                                    </select>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Component</span>
                                    </div>
                                    <select class="custom-select d-block " asp-for="Fault_To_Update.FkPrimaryComponentTypeId" required id="componenttypeselect">
                                        <option value="" selected disabled hidden>Select the component type</option>
                                        @foreach (var item in Model.PrimaryComponentType_List)
                                        {
                                            <option value="@(item.PkPrimaryComponentTypeId)">@item.PrimaryComponentType1</option>
                                        }
                                    </select>
                                    <select class="custom-select d-block " asp-for="Fault_To_Update.FkPrimaryComponentSubtypeId" id="componentsubtypeselect">
                                        <option value="" selected disabled hidden>Select the component subtype</option>
                                        @foreach (var item in Model.PrimaryComponentSubtype_List)
                                        {
                                            <option typeid="@(item.FkPrimaryComponentTypeId)" value="@(item.PkPrimaryComponentSubtypeId)">@item.PrimaryComponentSubtype1</option>
                                        }
                                    </select>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Fault Type</span>
                                    </div>
                                    <select class="custom-select d-block " asp-for="Fault_To_Update.FkFaultTypeId" required id="faulttypeselect">
                                        <option value="" selected disabled hidden>Select the fault type</option>
                                        @foreach (var item in Model.FaultType_List)
                                        {
                                            <option value="@(item.PkFaultTypeId)">@item.FaultType1</option>
                                        }
                                    </select>
                                    <select class="custom-select d-block" asp-for="Fault_To_Update.FkPrimaryComponentSubtypeId" id="faultsubtypeselect">
                                        <option value="" selected disabled hidden>Select the fault subtype</option>
                                        @foreach (var item in Model.FaultSubtype_List)
                                        {
                                            <option typeid="@(item.FkFaultTypeId)" value="@(item.PkFaultSubtypeId)">@item.FaultSubtype1</option>
                                        }
                                    </select>
                                </div>

                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">Fault Location</span>
                                    </div>
                                    <input type="text" asp-for="Fault_To_Update.FaultLocation" class="form-control" placeholder="Add fault details here" aria-label="Username" aria-describedby="basic-addon1">
                                </div>
                            </div>
                        </div>
                        <!--./FORM: Fault card-->
                    }


                    <!---------------------------------------------------------------->
                    <!--FORM: Reports -------------------------------------------------------->
                    <!--For now all these sections should probably always be displayed -->
                    <!--SUBFORM: Report Attributes -->
                    <div class="card mb-4 wow fadeIn">
                        <!--Card content-->
                        <div class="card-header font-weight-bold">Report Attributes</div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <label class="small text-muted" for="reportType">Report Type</label>
                                    <select class="custom-select d-block w-100" asp-for="Report_To_Update.FkReportTypeId" id="reportTypeselect" required>
                                        @foreach (var item in Model.ReportType_List)
                                        {
                                            if (item.PkReportTypeId == Model.Report_To_Update.FkReportTypeId)
                                            {
                                                <option value="@(item.PkReportTypeId)" selected>@item.ReportType1</option>
                                            }
                                            else
                                            {
                                                <option value="@(item.PkReportTypeId)">@item.ReportType1</option>
                                            }

                                        }
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="small text-muted" for="condition">Condition</label>
                                    <select class="custom-select d-block w-100" asp-for="Report_To_Update.FkConditionId" id="conditionselect" required>
                                        @foreach (var item in Model.Condition_List)
                                        {
                                            if (item.PkConditionId == Model.Report_To_Update.FkConditionId)
                                            {
                                                <option value="@(item.PkConditionId)" selected>@item.Condition1 - @item.ConditionMagnitude</option>
                                            }
                                            else
                                            {
                                                <option value="@(item.PkConditionId)">@item.Condition1 - @item.ConditionMagnitude</option>
                                            }
                                        }
                                    </select>
                                    <div class="invalid-feedback">
                                        Please select a valid condition.
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label class="small text-muted" for="username">Report Date</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                        </div>
                                        <input type="date" name="Report_To_Update.ReportDate" class="form-control" id="reportdate" value="@DateTime.Today.ToString("yyyy-MM-dd")" required>
                                        <div class="invalid-feedback" style="width: 100%;">
                                            Report date is required.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--./SUBFORM: Report Attributes -->
                        <!--SUBFORM: Observations -->
                        <!--Card content-->

                        <div class="card-body" style="z-index: 99">
                            <h1 class="line-through mb-4">Observations</h1>
                            <div class="rpt-input-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">Observation</span>
                                </div>
                                <div class="rpt-select-wrapper" id="selectObservationType">
                                    <div class="rpt-select">
                                        <div class="rpt-select__trigger">
                                            <span id="observationTypeSelected" data-value="">Select a category</span>
                                            <div class="arrow"></div>
                                        </div>
                                        <div class="rpt-options">
                                            <span class="rpt-header">Observation Category</span>
                                            <span class="rpt-option selected" observationtypeid="default">Select an observation category</span>
                                            @foreach (var item in Model.ObservationType_List)
                                            {
                                                <span class="rpt-option" observationtypeid="@(item.PkObservationTypeId)">@item.ObservationType1</span>
                                            }
                                            <span class="rpt-header">Custom Entry</span>
                                            <span class="rpt-option" observationtypeid="Other">Other</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="rpt-select-wrapper" id="selectObservation">
                                    <div class="rpt-select">
                                        <div class="rpt-select__trigger" id="observationSelected">
                                            <span>Select an observation</span>
                                            <div class="arrow"></div>
                                        </div>
                                        <div class="rpt-options">
                                            <span class="rpt-option selected" observationtypeid="default">Select an observation</span>
                                            @foreach (var item in Model.Observation_List)
                                            {
                                                <span class="rpt-option" style="display: none;" observationtypeid="@(item.FkObservationTypeId)">@item.Observation1</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="rpt-select-wrapper" style="display: none;" id="customObservation">
                                    <input type="text" class="form-control" id="inputCustomObservation">
                                </div>
                                <div class="input-group-append">
                                    <button type="button" id="btnAddObservation">+</button>
                                    <button type="button" style="display: none;" id="btnAddCustomObservation">+</button>
                                </div>
                            </div>
                            <ul class="list-group list-group-flush" id="observationList">
                            </ul>
                            <input type="hidden" name="Report_To_Update.Observations" class="form-control" id="allObservations">
                        </div>
                        <!--./SUBFORM: Observations -->
                        <!--SUBFORM: Actions -->
                        <!--Card content-->

                        <div class="card-body">
                            <h1 class="line-through mb-4">Actions</h1>
                            <div class="rpt-input-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">Action</span>
                                </div>
                                <div class="rpt-select-wrapper">
                                    <div class="rpt-select" id="selectedAction">
                                        <div class="rpt-select__trigger" id="actionSelected">
                                            <span>Please Select An Action</span>
                                            <div class="arrow"></div>
                                        </div>
                                        <div class="rpt-options">
                                            <span class="rpt-header">Listed by least intrusive (top) to most intrusive (bottom)</span>
                                            @foreach (var item in Model.Action_List)
                                            {
                                                <span class="rpt-option" style="display: none;" faulttype="@item.FkFaultTypeId">@item.Action1</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="input-group-append">
                                    <button type="button" id="btnAddAction">+</button>
                                </div>
                            </div>

                            <div class="mb-3">
                                <ul class="list-group list-group-flush" id="actionList">
                                </ul>
                                <input type="hidden" name="Report_To_Update.Actions" class="form-control" id="allActions">
                                <div class="invalid-feedback">
                                    You've already selected that action
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="small text-muted" for="formExternalNotes">Additional Recommendations</label>
                                <textarea type="text" id="formExternalNotes" asp-for="Report_To_Update.ExternalNotes" class="form-control" rows="3"></textarea>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="small text-muted" for="notification">Notification</label>
                                    <input type="number" class="form-control" id="notification" asp-for="Report_To_Update.NotificationNo">
                                    <div class="invalid-feedback">
                                        Valid number is required.
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="small text-muted" for="workOrder">Work Order</label>
                                    <input type="number" class="form-control" id="workOrder" asp-for="Report_To_Update.WorkOrderNo">
                                    <div class="invalid-feedback">
                                        Valid number is required.
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--./SUBFORM: Actions -->
                        <!--SUBFORM: Attachments -->
                        <!--Card content-->
                        <div class="card-body">
                            <h1 class="line-through mb-4">Attachments</h1>

                            <div class="form-group">
                                <label class="small text-muted" for="formInternalNotes">Analyst Notes (internal)</label>
                                <textarea type="text" id="formInternalNotes" asp-for="Report_To_Update.AnalystNotes" class="form-control" rows="3"></textarea>
                            </div>
                            <br />


                            <div class="card-body">
                                @*<input id="btnChooseFile" type="button" class="btn btn-primary btn-lg btn-block" value="Click here to upload files" onclick="document.getElementById('reportAttachments').click();" />*@
                                <input type="file" name="reportAttachments" id="reportAttachments" multiple="multiple" accept="image/*" style="display: none" />
                                <button type="button" class="btn btn-primary btn-lg btn-block" id="btnChooseFile" onclick="document.getElementById('reportAttachments').click();">Click here to upload files</button>
                            </div>


                            <div class="input-group">
                                <!--Card content-->
                                <div class="card-body">
                                    <ul class="list-unstyled">
                                        @foreach (var item in Model.ReportFiles_All)
                                        {
                                            <li class="media">
                                                <img class="d-flex mr-3" src="~/MachineAttach/@(item.FileName)" alt="Generic placeholder image" width=25%, height=25%>
                                                <div class="media-body">
                                                    Uploaded By: @item.UploadedBy
                                                    <br />
                                                    Uploaded Date: @item.UploadDate
                                                    <br />
                                                    <button reportfileid="@item.PkFilePathId" class="btn btn-info btn-rounded btn-sm btnDeleteReportFile" style="color:black; font-size:10pt" type="submit" form="deletereportfileform">Delete This Attachment</button>
                                                </div>
                                            </li>
                                            <br />
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--./SUBFORM: Attachments -->
                    <!--DISPLAY:  Report Timeline -->
                    <div class="card mb-4" id="historicReports">
                        <!--Card content-->
                        <div class="card-body col-md-12">
                            <h5 class="grey-text font-weight-light">Report Timeline</h5>
                            <hr />
                            <div class="row">
                                <nav id="historicReportsNav" class="flex-column col-3 nav nav-pills">
                                    @for (int idx = 0; idx < Model.ReportHistoryList.Count; ++idx)
                                    {
                                        var item = Model.ReportHistoryList[idx];
                                        if (item.FkConditionId == 1) // Magnitude 2; No Action
                                        {
                                            <div class="rpt-stepper"><a class="nav-link @Model.active_status_list[Convert.ToInt32(idx == 0)]" href="#report@(item.PkReportId)"> @(((DateTime)item.ReportDate).ToString("dd/MM/yyyy")) <i class="fas fa-square text-default pl-2"></i></a></div>
                                        }
                                        else if (item.FkConditionId == 2) // Magnitude 3; Trending
                                        {
                                            <div class="rpt-stepper"><a class="nav-link @Model.active_status_list[Convert.ToInt32(idx == 0)]" href="#report@(item.PkReportId)"> @(((DateTime)item.ReportDate).ToString("dd/MM/yyyy")) <i class="fas fa-square text-warning pl-2"></i></a></div>
                                        }
                                        else if (item.FkConditionId == 3) // Magnitude 4; Plan Intervention
                                        {
                                            <div class="rpt-stepper"><a class="nav-link @Model.active_status_list[Convert.ToInt32(idx == 0)]" href="#report@(item.PkReportId)"> @(((DateTime)item.ReportDate).ToString("dd/MM/yyyy")) <i class="fas fa-square text-alert pl-2"></i></a></div>
                                        }
                                        else if (item.FkConditionId == 4) // Magnitude 5; Prompt Intervention
                                        {
                                            <div class="rpt-stepper"><a class="nav-link @Model.active_status_list[Convert.ToInt32(idx == 0)]" href="#report@(item.PkReportId)"> @(((DateTime)item.ReportDate).ToString("dd/MM/yyyy")) <i class="fas fa-square text-danger pl-2"></i></a></div>
                                        }
                                    }
                                </nav>

                                @{var bodyHeight = Model.ReportHistoryList.Count * 40 < 500 ? 500 : Model.ReportHistoryList.Count * 40;
                                    if (Model.ReportHistoryList.Count == 0)
                                    {
                                        bodyHeight = 0;
                                    }
                                }
                                <div id="historicReportsBody" data-spy="scroll" data-target="#historicReportsNav" data-offset="200" class="col-9" style="height: @(bodyHeight)px">



                                    @foreach (var item in Model.ReportHistoryList)
                                    {
                                        <section id="report@(item.PkReportId)">
                                            @{
                                                if (item.FkConditionId == 1) // Magnitude 2; No Action
                                                {
                                                    <h4 class="border-default">
                                                        No Action
                                                    </h4>
                                                }
                                                else if (item.FkConditionId == 2) // Magnitude 3; Trending
                                                {
                                                    <h4 class="border-warning">
                                                        Trending
                                                    </h4>
                                                }
                                                else if (item.FkConditionId == 3) // Magnitude 4; Plan Intervention
                                                {
                                                    <h4 class="border-alert">
                                                        Plan Intervention
                                                    </h4>
                                                }
                                                else if (item.FkConditionId == 4) // Magnitude 5; Prompt Intervention
                                                {
                                                    <h4 class="border-danger">
                                                        Prompt Intervention
                                                    </h4>
                                                }
                                            }
                                            <span><i class="far fa-calendar-alt"></i> @(((DateTime)item.ReportDate).ToString("dd/MM/yyyy")) </span>

                                            <!-- Observation Block -->
                                            @{
                                                if (item.Observations != null)
                                                {
                                                    <h5>Observations</h5>
                                                    var ObservationsList = item.Observations.Split(";");
                                                    <ul class="mb-3 font-small list-group">
                                                        @foreach (var item1 in ObservationsList)
                                                        {
                                                            if (item1 != "")
                                                            {
                                                                <li class="list-group-item"> @item1 </li>
                                                            }

                                                        }
                                                    </ul>
                                                }
                                            }
                                            <!-- ./Observation Block -->
                                            <!-- Actions Block -->
                                            @{
                                                if (item.Actions != null)
                                                {
                                                    <h5>Actions</h5>
                                                    var ActionsList = item.Actions.Split(";");
                                                    <ul class="mb-4 unstyled-list  font-small list-group">
                                                        @foreach (var item1 in ActionsList)
                                                        {
                                                            if (item1 != "")
                                                            {
                                                                <li class="list-group-item"> @item1 </li>
                                                            }

                                                        }
                                                    </ul>
                                                }
                                            }
                                            <!-- ./Actions Block -->
                                            <!-- Recommendations Block -->
                                            @{
                                                if (item.ExternalNotes != null)
                                                {
                                                    <h5 for="formAddRec">Additional Recommendations</h5>
                                                    <p class="mb-3 font-small list-group-item">
                                                        @item.ExternalNotes
                                                    </p>
                                                }

                                            }
                                            <!-- ./Recommendations Block -->
                                            <!-- WO Block -->
                                            @{
                                                if (item.WorkOrderNo != null)
                                                {

                                                    <h5 class="d-inline" for="workOrder">Work Order : </h5>
                                                    <span> @item.WorkOrderNo </span>
                                                }

                                            }
                                            <!-- ./WO Block -->
                                            <!-- InternalNotes Block -->
                                            @{
                                                if (item.AnalystNotes != null)
                                                {

                                                    <h5 for="formIntNotes">Analyst Notes (internal)</h5>
                                                    <p class="mb-3 font-small list-group-item">@item.AnalystNotes</p>
                                                }
                                            }
                                            <!-- ./InternalNotes Block -->
                                            <!-- Attachment Block -->
                                            @{
                                                if (item.ReportFile_List.Count > 0)
                                                {
                                                    <h5>Attachments</h5>
                                                    <ul class="list-unstyled">
                                                        @foreach (var file in item.ReportFile_List)
                                                        {
                                                            <li class="media">
                                                                <img class="d-flex mr-3" src="~/MachineAttach/@(file.FileName)" alt="Generic placeholder image" width=25%, height=25%>
                                                                <div class="media-body">
                                                                    Uploaded By: @file.UploadedBy
                                                                    <br />
                                                                    Uploaded Date: @file.UploadDate
                                                                </div>
                                                            </li>
                                                            <br />
                                                        }
                                                    </ul>
                                                }
                                            }

                                            <!-- ./Attachment Block -->
                                        </section>
                                        <hr />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--./DISPLAY: Report Timeline-->
                    <!--card-->
                    <div class="card mb-4 wow fadeIn">
                        <!--Card content-->
                        <div class="card-body">
                            <div class="d-block my-3">
                                <div class="custom-control custom-radio">
                                    <input value="1" name="Report_To_Update.FkReportStageId" id="inProgress" type="radio" class="custom-control-input" checked>
                                    <label class="custom-control-label" for="inProgress">In Progress</label>
                                </div>
                                <div class="custom-control custom-radio">
                                    <input value="2" name="Report_To_Update.FkReportStageId" id="readyforReview" type="radio" class="custom-control-input">
                                    <label class="custom-control-label" for="readyforReview">Ready to Release</label>
                                </div>
                            </div>
                            <button class="btn btn-primary btn-lg btn-block btnUpdateReportFault" id="btnUpdateReportFault" type="submit">Submit</button>
                        </div>
                    </div>
                </form>
            </div>

        </div>

    </div>

    <form method="post" asp-page-handler="deletereportfile" id="deletereportfileform">
        <input type="hidden" asp-for="ReportFileID_ToDelete" id="ReportFileID_ToDelete" />
        <input type="hidden" asp-for="SelectedReportId" value="@Model.Current_Displayed_Report.ReportId" />
    </form>
    <!--Section: Report Form-->
    <!--- buttons and forms  -->
    <div class="row d-flex justify-content-center modalWrapper">

        <!--- end machines list -->
        <div class="modal fade" id="modalLoadReport" tabindex="-1" role="dialog" aria-labelledby="modalLoadReport"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100 font-weight-bold ml-5 text-danger">Load the selected report</h4>
                        <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body mx-3">
                        <p>
                            If you load a new report, any changes that haven't been submitted will be lost.
                        </p>
                        <p>
                            Are you sure you want to discard your changes?
                        </p>

                    </div>
                    <div class="modal-footer d-flex justify-content-center deleteButtonsWrapper">
                        <button type="button" class="btn btn-danger btnYesClass btnYesLoadSelectedReport" id="btnYesLoadSelectedReport" data-dismiss="modal">Yes</button>
                        <button type="button" class="btn btn-primary btnNoClass" id="btnNo" data-dismiss="modal">No</button>
                    </div>
                </div>
            </div>
        </div>
    </div><!--- end pop up forms -->



    @section Scripts{



        <script type="text/javascript">
            jQuery(document).ready(function () {
                setTimeout(updateScrollSpy, 1000);
            });
            function updateScrollSpy() {
                jQuery('[data-spy="scroll"]').each(function () {
                    var $spy = jQuery(this).scrollspy('refresh')
                });
            }
        </script>


        <script>
            // filter observations

            var selectedObservationType = document.getElementById('selectObservationType');
            var selectedObservation = document.getElementById('selectObservation');

            for (const option of selectedObservationType.querySelectorAll('.rpt-option')) {
                option.addEventListener('click', function () {
                    //reset selected observation
                    selectedObservation.querySelector('.rpt-select__trigger span').textContent = "Select an observation";

                    //filter the observations
                    var index = 0;
                    for (const option1 of selectedObservation.querySelectorAll('.rpt-option')) {
                        if (option1.getAttribute('observationtypeid') !== option.getAttribute('observationtypeid')) {
                            option1.style.display = 'none';
                            if (index == 0) {
                                option1.classList.add('selected');
                            }
                            else {
                                option1.classList.remove('selected');
                            }
                            index++;
                        }
                        else {
                            option1.style.display = null;
                        }
                    }
                })
            }
        </script>

        <script>
            // filter actions

            if (document.getElementById('Fault_To_Update_FkFaultTypeId') == null) { // create a new fault


                var selectedFaultType = document.getElementById('faulttypeselect');
                var selectedAction = document.getElementById('selectedAction');

                selectedAction.querySelector('.rpt-select__trigger span').textContent = "You Must Select A Fault Type First";

                selectedFaultType.addEventListener('change', function () {
                    // must select a fault type

                    selectedAction.querySelector('.rpt-select__trigger span').textContent = "Please Select An Action";

                    var index = 0;
                    for (const option of selectedAction.querySelectorAll('.rpt-option')) {
                        if (option.getAttribute('faulttype') !== this.value) {
                            option.style.display = 'none';
                            if (index == 0) {
                                option.classList.add('selected');
                            }
                            else {
                                option.classList.remove('selected');
                            }
                            index++;
                        }
                        else {
                            option.style.display = null;
                        }
                    }
                })
            }
            else { // existing fault
                var existingFaultType = document.getElementById('existingfaultType');
                var selectedAction = document.getElementById('selectedAction');


                var index = 0;
                for (const option of selectedAction.querySelectorAll('.rpt-option')) {
                    if (option.getAttribute('faulttype') !== existingFaultType.getAttribute('faulttype')) {
                        option.style.display = 'none';
                        if (index == 0) {
                            option.classList.add('selected');
                        }
                        else {
                            option.classList.remove('selected');
                        }
                        index++;
                    }
                    else {
                        option.style.display = null;
                    }
                }
            }

        </script>


        <script>
            //Custom select event listener
            for (const dropdown of document.querySelectorAll(".rpt-select-wrapper")) {
                dropdown.addEventListener('click', function () {
                    this.querySelector('.rpt-select').classList.toggle('open');
                })
            }

            for (const option of document.querySelectorAll(".rpt-option")) {

                option.addEventListener('click', function () {
                    if (!this.classList.contains('selected')) {
                        this.parentNode.querySelector('.rpt-option.selected').classList.remove('selected');
                        this.classList.add('selected');

                        this.closest('.rpt-select').querySelector('.rpt-select__trigger span').textContent = this.textContent;
                        this.closest('.rpt-select').querySelector('.rpt-select__trigger span').setAttribute('observationtypeid', this.getAttribute('observationtypeid'));


                        if (this.textContent == "Other") {
                            document.querySelector('#customObservation').style.display = "block";
                            document.querySelector('#btnAddCustomObservation').style.display = "block";
                            document.querySelector('#selectObservation').style.display = "none";
                            document.querySelector('#btnAddObservation').style.display = "none";
                        } else {
                            document.querySelector('#customObservation').style.display = "none";
                            document.querySelector('#btnAddCustomObservation').style.display = "none";
                            document.querySelector('#selectObservation').style.display = "block";
                            document.querySelector('#btnAddObservation').style.display = "block";
                        }
                    }
                })
            }

            window.addEventListener('click', function (e) {
                for (const select of document.querySelectorAll('.rpt-select')) {
                    if (!select.contains(e.target)) {
                        select.classList.remove('open');
                    }
                }
            });

        </script>

        <script>

            ////add and remove list items
            //// Get all the element references you'll need just once:
            var actionList = document.querySelector("#actionList");
            var actionSelected = document.querySelector("#actionSelected span");
            var btnAddAction = document.querySelector("#btnAddAction");

            //// Do all of your event binding in JavaScript, not with inline HTML event attributes
            btnAddAction.addEventListener("click", addAction);

            function addAction() {
                if (actionSelected.textContent !== "") {

                    // Don't build new HTML by concatenating strings. Create elements and configure them as objects
                    var li = document.createElement("li");
                    li.textContent = actionSelected.textContent;
                    li.classList.add("list-group-item");

                    // Only use hyperlinks for navigation, not to have something to click on. Any element can be clicked
                    var span = document.createElement("span");
                    span.classList.add("close");
                    span.textContent = "x";
                    span.addEventListener("click", removeAction);
                    li.appendChild(span);  // Add the span to the bullet

                    if (actionSelected.textContent === "Please Select An Action" || actionSelected.textContent === "You Must Select A Fault Type First") {
                        return;
                    }

                    // do not add duplicated item
                    for (const listItem of document.querySelectorAll("#actionList li")) {
                        if (actionSelected.textContent === listItem.textContent.slice(0, -1)) {
                            return;
                        }
                    }


                    actionList.appendChild(li); // Add the bullet to the list
                    //newAction.textContent = "";
                }
            }

            // Remove the closest <li> ancestor to the <span> that got clicked
            function removeAction() {
                actionList.removeChild(this.closest("li"));
            }

            // Add event listener on pre-existing actions
            for (const listItem of document.querySelectorAll("#actionList li")) {
                listItem.addEventListener('click', removeAction);
            }

        </script>

        <script>

            ////add and remove list items
            //// Get all the element references you'll need just once:
            var observationList = document.querySelector("#observationList");
            var observationSelected = document.querySelector("#observationSelected span");
            var btnAddObservation = document.querySelector("#btnAddObservation");

            //// Do all of your event binding in JavaScript, not with inline HTML event attributes
            btnAddObservation.addEventListener("click", addObservation);

            function addObservation() {
                if (observationSelected.textContent !== "") {

                    // Don't build new HTML by concatenating strings. Create elements and configure them as objects
                    var li = document.createElement("li");
                    li.textContent = observationSelected.textContent;
                    li.classList.add("list-group-item");

                    // Only use hyperlinks for navigation, not to have something to click on. Any element can be clicked
                    var span = document.createElement("span");
                    span.classList.add("close");
                    span.textContent = "x";
                    span.addEventListener("click", removeObservation);
                    li.appendChild(span);  // Add the span to the bullet


                    if (observationSelected.textContent === "Select an observation") {
                        return;
                    }

                    // do not add duplicated item
                    for (const listItem of document.querySelectorAll("#observationList li")) {
                        if (observationSelected.textContent === listItem.textContent.slice(0, -1)) {
                            return;
                        }
                    }

                    observationList.appendChild(li); // Add the bullet to the list
                    //newObservation.textContent = "";
                }
            }

            // Custom Observations
            var inputObservation = document.querySelector("#inputCustomObservation");
            var btnAddCustomObservation = document.querySelector("#btnAddCustomObservation");
            btnAddCustomObservation.addEventListener("click", addCustomObservation);

            function addCustomObservation() {
                if (inputObservation.value !== "") {

                    // Don't build new HTML by concatenating strings. Create elements and configure them as objects
                    var li = document.createElement("li");
                    li.textContent = inputObservation.value;
                    li.classList.add("list-group-item");

                    // Only use hyperlinks for navigation, not to have something to click on. Any element can be clicked
                    var span = document.createElement("span");
                    span.classList.add("close");
                    span.textContent = "x";
                    span.addEventListener("click", removeObservation);
                    li.appendChild(span);  // Add the span to the bullet
                    observationList.appendChild(li); // Add the bullet to the list
                    //newAction.textContent = "";
                }
            }

            // Remove the closest <li> ancestor to the <span> that got clicked
            function removeObservation() {
                observationList.removeChild(this.closest("li"));
            }

            // Add event listener on pre-existing observations
            for (const listItem of document.querySelectorAll("#observationList li")) {
                listItem.addEventListener('click', removeObservation);
            }

        </script>

        <script>

            // get selected report id and set the form input
            var setReportIdInput = function () {
                var id = this.getAttribute("id");
                document.getElementById("selectedreportidtoload").value = id;
            }

            window.onload = function () {
                var inputs = document.getElementsByClassName("in-queue-rpt-item");
                for (var index = 0; index < inputs.length; ++index) {
                    inputs[index].addEventListener('click', setReportIdInput, false);
                }
            }

            $(document).on("click", ".btnYesLoadSelectedReport", function () {
                //alert("submitting form");
                $('#loadselectedreportform').submit();
            });

        </script>

        <script>
            // click the button btnUpdateReportFault

            $(document).on("click", ".btnUpdateReportFault", function () {

                // get all the observations and actions before submitting the form
                var allObservations = "";
                for (const listItem of document.querySelectorAll("#observationList li")) {
                    allObservations = allObservations + listItem.textContent + ";"
                }
                document.getElementById('allObservations').setAttribute('value', allObservations);

                var allActions = "";
                for (const listItem of document.querySelectorAll("#actionList li")) {
                    allActions = allActions + listItem.textContent + ";"
                }
                document.getElementById('allActions').setAttribute('value', allActions);


                // submit form
                $('#updatereportfaultform').submit();
            });
        </script>

        <script>
            $(document).on("click", ".btnDeleteReportFile", function () {
                //alert("123456");
                //alert($(this)[0]);
                var id = $(this)[0].getAttribute('reportfileid');
                //alert(id);
                document.getElementById('ReportFileID_ToDelete').setAttribute('value', id);
                //alert(document.getElementById('ReportFileID_ToDelete').getAttribute('value'));
                // submit form
                $('#deletereportfileform').submit();
            });

        </script>
        <script>
            // change select list
            $("#componenttypeselect").change(function () {
                if ($(this).data('options') == undefined) {
                    $(this).data('options', $('#componentsubtypeselect option').clone());
                }
                var id = $(this).val();
                var options = $(this).data('options').filter('[typeid=' + id + ']');
                $('#componentsubtypeselect').html(options).show();
            });

            $("#faulttypeselect").change(function () {
                if ($(this).data('options') == undefined) {
                    $(this).data('options', $('#faultsubtypeselect option').clone());
                }
                var id = $(this).val();
                var options = $(this).data('options').filter('[typeid=' + id + ']');
                $('#faultsubtypeselect').html(options).show();
            });


        </script>

        <script>
            $("#reportAttachments").change(function () {
                document.getElementById('btnChooseFile').textContent = document.getElementById('reportAttachments').files.length + " image(s) will be uploaded";
            });
        </script>

        <!-- Droplist -->
        <script>
            $(function () {
                $("#ModifyCustomMachineTrain1").autocomplete({
                    source: '@Url.Page("index", "search")',
                    select: function (event, ui) {
                        event.preventDefault();
                        $('#ModifyCustomMachineTrain1').val(ui.item.label);
                        $('#ModifyCustomMachineTrainId').val(ui.item.value).trigger('change');
                    }
                });
            });
        </script>

        <script>

            $(document).ready(function () {
                ClearReportList();
                SetMachineTrainNameLoading();
                LoadCustomMachineReportList();
                var refreshId = setInterval(function () {
                    if (TreeviewInitialization()) {
                        clearInterval(refreshId);
                    }
                }, 500);
            })

            $("#ModifyCustomMachineTrainId").change(function () {
                ClearReportList();
                SetMachineTrainNameLoading();
                LoadCustomMachineReportList();
                var refreshId = setInterval(function () {
                    if (TreeviewInitialization()) {
                        clearInterval(refreshId);
                    }
                }, 500);
            })


            function ClearReportList() {
                $('#CustomMachineReportList').empty();
            }

            function SetMachineTrainName() {
                document.getElementById('AddNewFaultMachineName').innerHTML = document.getElementById('ModifyCustomMachineTrain1').value;
                document.getElementById('ReportListMachineTrainName').innerHTML = document.getElementById('ModifyCustomMachineTrain1').value;
            }

            function SetMachineTrainNameLoading() {
                document.getElementById('AddNewFaultMachineName').innerHTML = "Loading " + document.getElementById('ModifyCustomMachineTrain1').value;
                document.getElementById('ReportListMachineTrainName').innerHTML = "Loading " + document.getElementById('ModifyCustomMachineTrain1').value;
            }



            function LoadCustomMachineReportList() {
                $('#CustomMachineReportList').load('/ReviewReports?handler=ReportsPartial&machinetrainid=' + document.getElementById('ModifyCustomMachineTrainId').value + '&reportid=' + @Model.Current_Displayed_Report.ReportId);
            }

            function TreeviewInitialization() {
                
                if (document.getElementById('CheckPartialViewLoadedMachineTrainId') != null) {
                
                    if (document.getElementById('CheckPartialViewLoadedMachineTrainId').value == document.getElementById('ModifyCustomMachineTrainId').value) {
                
                        $('.treeview-animated').mdbTreeview();
                        SetMachineTrainName();
                        return true;
                    }
                }
                return false;

            }
        </script>

        <script>
            function AddHistoryReportBackToQueue() {
                var selected_reportlist = document.querySelectorAll('li.treeview-animated-element.opened');
                if (selected_reportlist.length > 0) {
                    var selected_report_id = selected_reportlist[0].getAttribute('data-reportid');
                    // check if this report is alredy in queue or not
                    var report_in_queue_list = document.querySelectorAll('.in-queue-rpt-item.list-group-item.d-flex.justify-content-between.lh-condensed');
                    for (i = 0; i < report_in_queue_list.length; ++i) {
                        if (report_in_queue_list[i].id == selected_report_id) {
                            alert("This report is alredy in queue!");
                            return;
                        }
                    }
                    

                    document.getElementById('ReportIdBackToQueueId').value = selected_report_id;
                    $('#AddHistoryReportBackToQueueForm').submit();
                }
                else {
                    alert("You Must Select A Report First!");
                }
            }
        </script>

    <script>

        $(document).on("click", ".reporttree", function () {
            $('#modalViewReport #modalView_ReportType')[0].textContent = $(this)[0].getAttribute('data-reporttype');
            $('#modalViewReport #modalView_Condition')[0].textContent = $(this)[0].getAttribute('data-condition');
            $('#modalViewReport #modalView_ReportDate')[0].textContent = $(this)[0].getAttribute('data-reportdate');
            //$('#modalViewReport #modalView_Observations')[0].textContent = $(this)[0].getAttribute('data-observations');
            //$('#modalViewReport #modalView_Actions')[0].textContent = $(this)[0].getAttribute('data-actions');
            $('#modalViewReport #modalView_ExternalNotes')[0].textContent = $(this)[0].getAttribute('data-externalnotes');
            //$('#modalViewReport #modalView_Notification')[0].textContent = $(this)[0].getAttribute('data-notification');
            //$('#modalViewReport #modalView_WorkOrder')[0].textContent = $(this)[0].getAttribute('data-workorder');
            $('#modalViewReport #modalView_AnalystNotes')[0].textContent = $(this)[0].getAttribute('data-analystnotes');
        });


    </script>

    }
